version: '3'

services:
  web:
    container_name: chat-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
      - "8887:8887"
    volumes:
      - ./service/chat/api/etc/chat-api.yaml:/etc/chat-api.yaml
    privileged: true
    restart: always
    networks:
      - chat_network
  websocket:
    container_name: chat-websocket
    build:
      context: .
      dockerfile: Dockerfile-websocket
    ports:
      - "8884:9501"
    privileged: true
    restart: always
    networks:
      - chat_network
  redis:
    container_name: redis7
    image: redis:7
    ports:
      - "46379:6379"
    volumes:
      - ./build/redis/redis.conf:/etc/redis/redis.conf
      - ./build/redis/data:/data
    environment:
      TZ: Asia/Shanghai
    networks:
      - chat_network
    restart: always
    command: redis-server /etc/redis/redis.conf
#  mysql:
#    container_name: mysql81
#    image: arm64v8/mysql:8.1
#    ports:
#      - "43306:3306"
#    environment:
#      TZ: Asia/Shanghai
#      MYSQL_ROOT_PASSWORD: 'Chat-gpt~wechat'
#      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
#      MYSQL_DATABASE: 'chat'
#      MYSQL_USER: 'chat'
#      MYSQL_PASSWORD: 'Chat-gpt~wechat'
#    volumes:
#      - ./build/mysql/data:/var/lib/mysql
#      - ./build/mysql/init:/docker-entrypoint-initdb.d
#    networks:
#      - chat_network
#    restart: always
#    command: --default-authentication-plugin=caching_sha2_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
  pgvector:
      container_name: pgvector
      image: ankane/pgvector:v0.5.1
      environment:
        TZ: Asia/Shanghai
        PGTZ: Asia/Shanghai
        POSTGRES_DB: chat
        POSTGRES_USER: chat
        POSTGRES_PASSWORD: Chat-gpt~wechat
        PGDATA: /data/postgres
      volumes:
        - ./build/pgvector/data:/data/postgres
        - ./build/pgvector/init:/docker-entrypoint-initdb.d/
      ports:
        - "43306:5432"
      networks:
        - chat_network
      restart: always
networks:
  chat_network: